{"version":3,"sources":["images/heart.png","components/Pokemon.js","components/PokeList.js","components/App.js","index.js"],"names":["module","exports","Pokemon","types","this","props","map","type","key","id","className","favorites","includes","toString","src","favIcon","alt","image","name","toUpperCase","React","Component","PokeList","favsHandlerChild","ev","favsHandler","pokemonList","pokemons","pokemon","index","onClick","evolution","url","App","bind","state","PokemonArray","updatedList","clickedPokemon","currentTarget","favsList","filter","setState","storage","localStorage","getItem","updateFavorites","JSON","parse","length","setItem","stringify","removeItem","ReactDOM","render","document","querySelector"],"mappings":"0EAAAA,EAAOC,QAAU,IAA0B,mC,8xDCyD5BC,E,uKArDH,IAAD,OACDC,EAAQC,KAAKC,MAAMF,MAAMG,KAAI,SAACC,GAClC,OACE,wBAAIC,IAAK,EAAKH,MAAMI,GAAIC,UAAU,eAC/BH,MAKP,OACE,oCACGH,KAAKC,MAAMM,UAAUC,SAASR,KAAKC,MAAMI,GAAGI,YAC3C,yBAAKC,IAAKC,IAASL,UAAU,WAAWM,IAAI,UAE5C,GAEF,yBAAKN,UAAU,wBACb,yBACEA,UAAU,YACVI,IAAKV,KAAKC,MAAMY,MAChBD,IAAG,cAASZ,KAAKC,MAAMa,SAG3B,wBAAIR,UAAU,gBAAgBN,KAAKC,MAAMa,KAAKC,eAC9C,wBAAIT,UAAU,cAAcP,Q,GAzBdiB,IAAMC,WC4CbC,EA5CE,SAACjB,GAChB,IAAMkB,EAAmB,SAACC,GACxBnB,EAAMoB,YAAYD,IAGdE,EAAcrB,EAAMsB,SAASrB,KAEjC,SAACsB,EAASC,GACR,OACE,wBACEnB,UAAU,OACVF,IAAKqB,EACLC,QAASP,EACTd,GAAImB,EAAQnB,IAEZ,kBAAC,EAAD,CACEA,GAAImB,EAAQnB,GACZS,KAAMU,EAAQV,KACdf,MAAOyB,EAAQzB,MACf4B,UAAWH,EAAQG,UACnBd,MAAOW,EAAQI,IACfrB,UAAWN,EAAMM,gBAO3B,OAAO,wBAAID,UAAU,QAAQgB,I,OC+ChBO,E,kDAvEb,WAAY5B,GAAQ,IAAD,8BACjB,cAAMA,IACDoB,YAAc,EAAKA,YAAYS,KAAjB,gBACnB,EAAKC,MAAQ,CACXP,QAASQ,EACTzB,UAAW,IALI,E,wDASPa,GACV,IAEIa,EAFEC,EAAiBd,EAAGe,cAAc9B,GAClC+B,EAAWpC,KAAK+B,MAAMxB,UAExB6B,EAAS5B,SAAS0B,GACpBD,EAAcG,EAASC,QAAO,SAACb,GAAD,OAAaA,IAAYU,KAC7CE,EAAS5B,SAAS0B,KAC5BD,EAAW,sBAAOG,GAAP,CAAiBF,KAE9BlC,KAAKsC,SAAS,CAAE/B,UAAW0B,M,0CAI3B,IAAMM,EAAUC,aAAaC,QAAQ,qBACrC,GAAIF,EAAS,CACX,IAAMG,EAAkBC,KAAKC,MAAML,GACnCvC,KAAKsC,SAAS,CAAE/B,UAAWmC,O,2CAK7B,IAAMN,EAAWpC,KAAK+B,MAAMxB,UACJ,IAApB6B,EAASS,OACXL,aAAaM,QAAQ,oBAAqBH,KAAKI,UAAUX,IAC5B,IAApBA,EAASS,QAClBL,aAAaQ,WAAW,uB,+BAK1B,IAAMZ,EAAWpC,KAAK+B,MAAMxB,UAE5B,OACE,yBAAKD,UAAU,OACb,wBAAIA,UAAU,UAAd,cACA,yBAAKA,UAAU,kBACb,6BACE,yBAAKI,IAAKC,IAASC,IAAI,YAAYN,UAAU,cAC7C,0BAAMA,UAAU,oBAAhB,UAAuC8B,EAASS,SAChD,yBAAKnC,IAAKC,IAASC,IAAI,YAAYN,UAAU,gBAGjD,kBAAC,EAAD,CACEiB,SAAUvB,KAAK+B,MAAMP,QACrBjB,UAAWP,KAAK+B,MAAMxB,UACtBc,YAAarB,KAAKqB,mB,GAvDVL,IAAMC,W,YCAxBgC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,Y","file":"static/js/main.85348bd7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/heart.cb4f5f50.png\";","import React from 'react';\nimport favIcon from '../images/heart.png';\n\nclass Pokemon extends React.Component {\n  render() {\n    const types = this.props.types.map((type) => {\n      return (\n        <li key={this.props.id} className=\"types-items\">\n          {type}\n        </li>\n      );\n    });\n\n    return (\n      <>\n        {this.props.favorites.includes(this.props.id.toString()) ? (\n          <img src={favIcon} className=\"favorite\" alt=\"heart\" />\n        ) : (\n          ''\n        )}\n        <div className=\"card__img__container\">\n          <img\n            className=\"card__img\"\n            src={this.props.image}\n            alt={`img-${this.props.name}`}\n          />\n        </div>\n        <h2 className=\"card__tittle\">{this.props.name.toUpperCase()}</h2>\n        <ul className=\"types-list\">{types}</ul>\n      </>\n    );\n  }\n}\n\n// OTRA FORMA DE HACERLO, CON MÉTODO FUNCIONAL\n\n// const Pokemon = (props) => {\n//   const types = props.pokemon.types.map((type, index) => {\n//     return (\n//       <li key={index} className=\"types-items\">\n//         {type}\n//       </li>\n//     );\n//   });\n//   return (\n//     <article>\n//       <img\n//         className=\"card__img\"\n//         src={props.pokemon.image}\n//         alt={`img-${props.pokemon.name}`}\n//       />\n//       <h2 className=\"card__tittle\">{props.pokemon.name.toUpperCase()}</h2>\n//       <ul className=\"types-list\">{types}</ul>\n//     </article>\n//   );\n// };\n\nexport default Pokemon;\n","import React from 'react';\nimport Pokemon from './Pokemon';\n\nconst PokeList = (props) => {\n  const favsHandlerChild = (ev) => {\n    props.favsHandler(ev);\n  };\n  // siempre que haya un array lo recorremos (lo que más se usa es el map pero también se puede hacer con for)\n  const pokemonList = props.pokemons.map(\n    // recibe 2 parámetros, cada uno de los elementos del array (la info de cada pokemon) y cada posición en el array\n    (pokemon, index) => {\n      return (\n        <li\n          className=\"card\"\n          key={index}\n          onClick={favsHandlerChild}\n          id={pokemon.id}\n        >\n          <Pokemon\n            id={pokemon.id}\n            name={pokemon.name}\n            types={pokemon.types}\n            evolution={pokemon.evolution}\n            image={pokemon.url}\n            favorites={props.favorites}\n          />\n        </li>\n      );\n    }\n  );\n\n  return <ul className=\"list\">{pokemonList}</ul>;\n};\n\n// OTRA FORMA DE HACERLO\n\n// const PokeList = (props) => {\n//   const pokemonList = props.pokemons.map((pokemon) => {\n//     return (\n//       <li className=\"card\" key={index}>\n//         <Pokemon pokemon={pokemon}/>\n//       </li>\n//     );\n//   });\n//   return <ul className=\"list\">{pokemonList}</ul>;\n// };\n\nexport default PokeList;\n","import React from 'react';\nimport PokeList from './PokeList';\nimport PokemonArray from '../data/PokemonArray.json';\nimport favIcon from '../images/heart.png';\n// HECHO CON CLASES\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.favsHandler = this.favsHandler.bind(this);\n    this.state = {\n      pokemon: PokemonArray,\n      favorites: [],\n    };\n  }\n\n  favsHandler(ev) {\n    const clickedPokemon = ev.currentTarget.id;\n    const favsList = this.state.favorites;\n    let updatedList;\n    if (favsList.includes(clickedPokemon)) {\n      updatedList = favsList.filter((pokemon) => pokemon !== clickedPokemon);\n    } else if (!favsList.includes(clickedPokemon)) {\n      updatedList = [...favsList, clickedPokemon];\n    }\n    this.setState({ favorites: updatedList });\n  }\n\n  componentDidMount() {\n    const storage = localStorage.getItem('favorite pokemons');\n    if (storage) {\n      const updateFavorites = JSON.parse(storage);\n      this.setState({ favorites: updateFavorites });\n    }\n  }\n\n  componentDidUpdate() {\n    const favsList = this.state.favorites;\n    if (favsList.length !== 0) {\n      localStorage.setItem('favorite pokemons', JSON.stringify(favsList));\n    } else if (favsList.length === 0) {\n      localStorage.removeItem('favorite pokemons');\n    }\n  }\n\n  render() {\n    const favsList = this.state.favorites;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"tittle\">My pokedex</h1>\n        <div className=\"favorites-list\">\n          <div>\n            <img src={favIcon} alt=\"pokeheart\" className=\"pokeheart\" />\n            <span className=\"favorites-number\">{`${favsList.length}`}</span>\n            <img src={favIcon} alt=\"pokeheart\" className=\"pokeheart\" />\n          </div>\n        </div>\n        <PokeList\n          pokemons={this.state.pokemon}\n          favorites={this.state.favorites}\n          favsHandler={this.favsHandler}\n        />\n      </div>\n    );\n  }\n}\n\n// LO MISMO HECHO CON MÉTODO FUNCIONAL\n\n// const App = () => {\n//   return (\n//     <div>\n//       <PokeList list={PokemonArray} />\n//     </div>\n//   );\n// };\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './stylesheets/index.scss';\nimport './stylesheets/reset.scss';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}